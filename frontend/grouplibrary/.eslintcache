<<<<<<< HEAD
[{"/root/maattamikko/group-d/frontend/grouplibrary/src/components/booklist.jsx":"1","/root/maattamikko/group-d/frontend/grouplibrary/src/components/Book.jsx":"2","/root/maattamikko/group-d/frontend/grouplibrary/src/App.jsx":"3","/root/maattamikko/group-d/frontend/grouplibrary/src/components/SearchBar.jsx":"4"},{"size":3553,"mtime":1606484651785,"results":"5","hashOfConfig":"6"},{"size":1168,"mtime":1606484695569,"results":"7","hashOfConfig":"6"},{"size":1904,"mtime":1606486720848,"results":"8","hashOfConfig":"6"},{"size":1559,"mtime":1606486142938,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"ve1mr6",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/root/maattamikko/group-d/frontend/grouplibrary/src/components/booklist.jsx",["20","21"],"import React, {useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport img from \"../placeholder-img.png\";\nimport { Box, Image, Text } from \"rebass\";\nimport { Tiles } from \"@rebass/layout\";\nimport Book from \"./Book\";\n\nconst URL = \"http://localhost:5000\";\nconst bookAxios = axios.create();\n\n\nconst BookList = (props) => {\n    const { searchString, searchOption } = props;\n    const [bookData,setBookData] = useState([]);\n    \n    useEffect(() => {\n        if(props){\n            if(!props.searchString){\n            bookAxios({\n                method: \"get\",\n                url: `${URL}/books`,\n            }).then(response => {\n                setBookData(response.data);\n            });\n            } else {\n                // ettei haeta ihan hirveen pienillä hauilla.\n                if(props.searchString.length < 3) {\n                    return;\n                }\n                // alla olevat varmaan voi jotenkin yhdistää silleen että dataan syötetään title,author,isbn kohdalle searchoption.\n                if(props.searchOption === \"author\") {\n                    bookAxios({\n                        method: \"post\",\n                        url: `${URL}/book/search`,\n                        data: { author: props.searchString }\n                    }).then(response => {\n                        console.log(\"author search\");\n                        console.log(response.data);\n                        setBookData(response.data);\n                    });\n                } else if (props.searchOption === \"title\") {\n                    bookAxios({\n                        method: \"post\",\n                        url: `${URL}/book/search`,\n                        data: { title: props.searchString }\n                    }).then(response => {\n                        console.log(\"title search\");\n                        console.log(response.data);\n                        setBookData(response.data);\n                    });\n                } else if (props.searchOption === \"isbn\") {\n                    bookAxios({\n                        method: \"post\",\n                        url: `${URL}/book/search`,\n                        data: { isbn: props.searchString }\n                    }).then(response => {\n                        console.log(\"author search\");\n                        console.log(response.data);\n                        setBookData([response.data]);\n                    });\n                }\n                console.log(\"search with string \", props.searchString);\n                console.log(\"search with option \", props.searchOption);\n            }\n        }\n    }, [searchString, searchOption]);\n\n    return(\n        <div>\n            <Tiles columns={[1, null, 1]}\n                bg=\"white\">\n                {   bookData.map((book) =>{\n                    book.img = img;\n                    return(<Book data={book} />);\n                    })\n                }\n            </Tiles>\n\n            <Tiles columns={[2, null, 4]} py={2}>\n                <Image src={img} height={140} width={95}/>\n                <Text paddingRight={280}>bookData</Text>\n            </Tiles>\n\n            <Tiles columns={[2, null, 4]} py={2}>\n                <Image src={img} height={140} width={95}/>\n                <Text paddingRight={280}>bookData</Text>\n            </Tiles>\n\n            <Tiles columns={[2, null, 4]} py={2}>\n                <Image src={img} height={140} width={95}/>\n                <Text paddingRight={280}>bookData</Text>\n            </Tiles>\n        </div>\n    )\n}\n\nexport default BookList\n\n        ","/root/maattamikko/group-d/frontend/grouplibrary/src/components/Book.jsx",["22","23"],"import { Flex, Image } from \"rebass\";\nimport { Tiles } from \"@rebass/layout\";\nimport { Button } from \"rebass\";\nimport img from \"../placeholder-img.png\";\nimport \"./book.css\";\n\nfunction Book (props) {\n    const { isbn, title, author, img, published, description} = props.data;\n    const year = published.slice(0, 4);\n    const month = published.slice(6,7);\n    const day = published.slice(9,10);\n    const availableCopies = props.data.copies.filter(copy => copy.status===\"in_library\");\n\n    return(\n    <div className=\"book\">\n        <Tiles columns={1, null , 2}>\n            <Image src={img} />\n            <div>\n                <h1>{title}</h1>\n                <h2>{author}</h2>\n                <h3>{day}.{month}.{year}</h3>\n                <p><b>ISBN:</b> {isbn}</p>\n                <p><b>Description:</b> {description}</p>\n            </div>\n        </Tiles>\n        <Flex className=\"reserveArea\">\n            <p><b>Total copies: </b> {props.data.copies.length}</p>\n            <p><b>Copies available:</b> {availableCopies.length}</p>\n            <Button>{availableCopies !== 0 ? \"Loan\" : \"Reserve\"}</Button>\n        </Flex>\n    </div>\n    );\n}\n\nexport default Book\n","/root/maattamikko/group-d/frontend/grouplibrary/src/App.jsx",[],"/root/maattamikko/group-d/frontend/grouplibrary/src/components/SearchBar.jsx",[],{"ruleId":"24","severity":1,"message":"25","line":4,"column":10,"nodeType":"26","messageId":"27","endLine":4,"endColumn":13},{"ruleId":"28","severity":1,"message":"29","line":66,"column":8,"nodeType":"30","endLine":66,"endColumn":36,"suggestions":"31"},{"ruleId":"24","severity":1,"message":"32","line":4,"column":8,"nodeType":"26","messageId":"27","endLine":4,"endColumn":11},{"ruleId":"33","severity":1,"message":"34","line":16,"column":26,"nodeType":"35","messageId":"36","endLine":16,"endColumn":27},"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["37"],"'img' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",{"desc":"38","fix":"39"},"Update the dependencies array to be: [searchString, searchOption, props]",{"range":"40","text":"41"},[2605,2633],"[searchString, searchOption, props]"]
=======
[{"/root/maattamikko/group-d/frontend/grouplibrary/src/components/booklist.jsx":"1","/root/maattamikko/group-d/frontend/grouplibrary/src/App.jsx":"2","/root/maattamikko/group-d/frontend/grouplibrary/src/components/Book.jsx":"3","/root/maattamikko/group-d/frontend/grouplibrary/src/components/Copy.jsx":"4"},{"size":961,"mtime":1606400234557,"results":"5","hashOfConfig":"6"},{"size":2601,"mtime":1606406188605,"results":"7","hashOfConfig":"6"},{"size":835,"mtime":1606400234549,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1606400234551,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"ve1mr6",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/root/maattamikko/group-d/frontend/grouplibrary/src/components/booklist.jsx",["21"],"import React, {useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport img from \"../JoyceUlysses2.jpg\";\nimport { Tiles } from \"@rebass/layout\";\nimport Book from \"./Book\";\n\nconst URL = \"http://localhost:5000\";\nconst bookAxios = axios.create();\n\n\nconst BookList = (props) => {\n  const { string } = props;\n  const [bookData,setBookData] = useState([]);\n  useEffect(() => {\n    if(props){\n      if(!props.string){\n          bookAxios({\n            method: \"get\",\n            url: `${URL}/books`,\n          }).then(response => {\n            setBookData(response.data);\n          });\n      } else {\n        console.log(\"no search string\");\n      }\n  }\n  }, [string]);\n\n  return(\n    <Tiles columns={[1, null, 1]}\n              bg=\"white\">\n                {bookData.map((book) =>{\n                  book.img = img;\n                  return(<Book data={book} />);\n                })\n              }\n    </Tiles>\n  \n  )\n}\n\nexport default BookList\n\n        ",["22","23"],"/root/maattamikko/group-d/frontend/grouplibrary/src/App.jsx",["24","25","26","27","28"],"/root/maattamikko/group-d/frontend/grouplibrary/src/components/Book.jsx",["29","30"],"import { Tiles } from \"@rebass/layout\";\nimport Copy from \"./Copy\";\n\nfunction Book (props) {\n    const { isbn, title, author, img, published, description} = props.data;\n    const year = published.slice(0, 4);\n    const month = published.slice(6,7);\n    const day = published.slice(9,10);\n    \n    return(\n        <Tiles columns={1, null , 2}>\n            <img src={img} />\n            <div>\n                <h1>{title}</h1>\n                <h2>{author}</h2>\n                <h3>{day}.{month}.{year}</h3>\n                <p><b>ISBN:</b> {isbn}</p>\n                <p><b>Description:</b> {description}</p>\n                {props.data.copies.map((copy) => {\n                    return(\n                        <Copy data={copy} />\n                    )\n                })}\n            </div>\n        </Tiles>\n    );\n}\n\nexport default Book\n","/root/maattamikko/group-d/frontend/grouplibrary/src/components/Copy.jsx",[],{"ruleId":"31","severity":1,"message":"32","line":27,"column":6,"nodeType":"33","endLine":27,"endColumn":14,"suggestions":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":21,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"39","severity":1,"message":"43","line":10,"column":12,"nodeType":"41","messageId":"42","endLine":10,"endColumn":24},{"ruleId":"39","severity":1,"message":"44","line":10,"column":26,"nodeType":"41","messageId":"42","endLine":10,"endColumn":41},{"ruleId":"39","severity":1,"message":"45","line":11,"column":12,"nodeType":"41","messageId":"42","endLine":11,"endColumn":24},{"ruleId":"39","severity":1,"message":"46","line":11,"column":26,"nodeType":"41","messageId":"42","endLine":11,"endColumn":41},{"ruleId":"47","severity":1,"message":"48","line":11,"column":26,"nodeType":"49","messageId":"50","endLine":11,"endColumn":27},{"ruleId":"51","severity":1,"message":"52","line":12,"column":13,"nodeType":"53","endLine":12,"endColumn":30},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'searchString' is assigned a value but never used.","'setSearchString' is assigned a value but never used.","'searchOption' is assigned a value but never used.","'setSearchOption' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"57","fix":"58"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props, string]",{"range":"59","text":"60"},[665,673],"[props, string]"]
>>>>>>> 755f69399388903c923ee37defe0fcf76b412bd6
